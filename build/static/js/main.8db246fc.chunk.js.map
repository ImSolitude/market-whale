{"version":3,"sources":["helpers.js","components/StorePicker/StorePicker.js","components/Header/Header.js","components/Order/Order.js","components/AddItemForm/AddItemForm.js","components/EditItemForm/EditItemForm.js","components/Inventory/Inventory.js","ItemsSamples.js","components/Item/Item.js","base.js","components/App.js","components/NotFound/NotFound.js","components/Router.js","serviceWorker.js","index.js"],"names":["formatCurrency","dollars","isNaN","toLocaleString","style","currency","randomArrayValue","arr","Math","floor","random","length","getFunStore","adjectives","concat","StorePicker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goToStore","event","preventDefault","storeName","myInput","current","value","props","history","push","React","createRef","react_default","a","createElement","className","onSubmit","type","ref","required","placeholder","defaultValue","Component","Header","src","alt","width","tagline","Order","renderOrder","key","item","items","count","order","orderTransitionConfig","classNames","timeout","enter","exit","countConfig","status","CSSTransition","TransitionGroup","component","name","price","onClick","deletefromOrder","xmlns","height","viewBox","fill","d","_this2","orderIds","keys","total","reduce","prevTotal","map","AddItemForm","nameRef","priceRef","statusRef","descRef","imageRef","createItem","e","isNumber","parseFloat","description","image","addItem","currentTarget","reset","EditItemForm","mySelect","handleChange","_objectSpread2","updatedItem","objectSpread","defineProperty","updateItem","index","handleDelete","deleteItem","onChange","Inventory","components_EditItemForm_EditItemForm","components_AddItemForm_AddItemForm","loadItemsSamples","item1","item2","item3","item4","item5","item6","Item","myImage","defaultImage","loadImage","setAttribute","handleAddToOrder","addToOrder","_this$props$data","data","onError","parseInt","disabled","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","Date","now","setState","sampleItems","foldElements","target","classList","toggle","marketWhale","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","context","removeBinding","setItem","stringify","Fragment","href","rel","components_Header_Header","components_Item_Item","components_Order_Order","components_Inventory_Inventory","NotFound","class","AppRouter","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8db246fc.chunk.js","sourcesContent":["export function formatCurrency(dollars) {\n  // isNaN(cents) ? (cents = 0) : '';\n  if(isNaN(dollars)){\n    dollars = 0;\n  }\n  return (dollars).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n}\n\nexport function randomArrayValue(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function getFunStore() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${randomArrayValue(adjectives)}-${randomArrayValue(adjectives)}-${randomArrayValue(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './StorePicker.css'\nimport { getFunStore } from '../../helpers';\n\nclass StorePicker extends React.Component {\n  constructor(){\n    super();\n    this.myInput = React.createRef();\n  }\n  static propTypes = {\n    history: PropTypes.object\n  }\n  goToStore = (event) => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`/store/${storeName}`);\n  }\n  render(){\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input type=\"text\" ref={this.myInput} required placeholder=\"store-name\" defaultValue={getFunStore()} />\n\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;","import React from \"react\";\nimport \"./Header.css\";\nimport PropTypes from 'prop-types';\n\nconst Header = props => {\n  return (\n    <header className=\"header\">\n      <h1>\n        <img src=\"../logo.png\" alt=\"Market Whale\" width=\"35px\" /> Market\n        <span>Whale</span>\n      </h1>\n      <h3 className=\"tagline\">{props.tagline}</h3>\n    </header>\n  );\n};\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport \"./Order.css\";\nimport { formatCurrency } from \"../../helpers\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    items: PropTypes.object,\n    order: PropTypes.object,\n    deletefromOrder: PropTypes.func,\n  };\n  renderOrder = key => {\n    const item = this.props.items[key];\n    const count = this.props.order[key];\n    const orderTransitionConfig = {\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 150, exit: 150 }\n    };\n    const countConfig = {\n      classNames: \"count\",\n      key: count,\n      timeout: { enter: 300, exit: 300 }\n    };\n\n    if (!item) {\n      // Make sure the item is loaded first;\n      return null;\n    }\n    if (!item.status) {\n      // If item not available\n      return (\n        <CSSTransition {...orderTransitionConfig}>\n          <li key={key}>\n            Sorry {item ? item.name : \"Item\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...orderTransitionConfig}>\n        <li key={key}>\n          <span className=\"order-count\">\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition {...countConfig}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs\n          </span>\n          <span className=\"order-name\">{item.name}</span>\n          <span className=\"order-price\">\n            {formatCurrency(count * item.price)}\n          </span>\n          <button\n            className=\"order-delete\"\n            onClick={() => this.props.deletefromOrder(key)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"15\"\n              height=\"15\"\n              viewBox=\"0 0 24 24\"\n              fill=\"#FFFFFF\"\n            >\n              <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\n            </svg>\n          </button>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const item = this.props.items[key];\n      const count = this.props.order[key];\n      const isAvailable = item && item.status;\n      if (isAvailable) {\n        return prevTotal + count * item.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order\">\n        <h1>Order</h1>\n\n        <TransitionGroup component=\"ul\" className=\"order-list\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        <div className=\"total\">\n          Total: <span>{formatCurrency(total)}</span>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Order;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./AddItemForm.css\";\nimport { isNumber } from \"util\";\n\nclass AddItemForm extends React.Component {\n  static propTypes = {\n    addItem: PropTypes.func\n  }\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createItem = e => {\n    e.preventDefault();\n    const item = {\n      name: this.nameRef.current.value,\n      price: isNumber(this.priceRef.current.value)\n        ? parseFloat(this.priceRef.current.value)\n        : 0,\n      status: this.statusRef.current.value === \"true\",\n      description: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addItem(item);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"item-add\" onSubmit={this.createItem}>\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Item Name\"\n          ref={this.nameRef}\n          required\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          placeholder=\"Item Price\"\n          ref={this.priceRef}\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"true\">Fresh</option>\n          <option value=\"false\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"description\"\n          placeholder=\"Item Description\"\n          ref={this.descRef}\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          placeholder=\"Item Image\"\n          ref={this.imageRef}\n        />\n        <button type=\"submit\">+ Add Item</button>\n      </form>\n    );\n  }\n}\n\nexport default AddItemForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./EditItemForm.css\";\n\nclass EditItemForm extends React.Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      status: PropTypes.bool,\n      // price: PropTypes.number\n    }),\n    updateItem: PropTypes.func,\n    deleteItem: PropTypes.func,\n    index: PropTypes.string\n  };\n  mySelect = React.createRef();\n  handleChange = e => {\n    const updatedItem = {\n      ...this.props.item,\n      [e.currentTarget.name]: e.currentTarget.value,\n      status: this.mySelect.current.value === \"true\"\n    };\n    this.props.updateItem(this.props.index, updatedItem);\n  };\n  handleDelete = () => {\n    this.props.deleteItem(this.props.index);\n  };\n  render() {\n    return (\n      <form className=\"item-create\" onSubmit={this.createItem}>\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.item.name}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.item.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.item.status}\n          ref={this.mySelect}\n        >\n          <option value=\"true\">Fresh</option>\n          <option value=\"false\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"description\"\n          onChange={this.handleChange}\n          value={this.props.item.description}\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.item.image}\n        />\n        <button\n          type=\"submit\"\n          onClick={() => this.props.deleteItem(this.props.index)}\n        >\n          - Remove Item\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default EditItemForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import Login from \"../Login/Login\";\nimport AddItemForm from \"../AddItemForm/AddItemForm\";\nimport EditItemForm from \"../EditItemForm/EditItemForm\";\n// import base, { firebaseApp } from \"../../base\";\nimport \"./Inventory.css\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    items: PropTypes.object,\n    updateItem: PropTypes.func,\n    deleteItem: PropTypes.func,\n    addItem: PropTypes.func,\n    loadItemsSamples: PropTypes.func\n  };\n  // state = {\n  //   uid: null,\n  //   owner: null\n  // };\n\n  // componentDidMount() {\n  //   firebase.auth().onAuthStateChanged(user => {\n  //     if (user) {\n  //       this.authHandler({ user });\n  //     }\n  //   });\n  // }\n\n  // authHandler = async authData => {\n  //   // Load current store in the firebase database\n  //   const store = await base.fetch(this.props.storeId, { context: this });\n  //   // Claim if there's no owner\n  //   if (!store.owner) {\n  //     // Save it as my own\n  //     base.post(`${this.props.storeId}/owner`, {\n  //       data: authData.user.uid\n  //     });\n  //   }\n  //   // Set the state\n  //   this.setState({\n  //     uid: authData.user.uid,\n  //     owner: store.owner || authData.user.uid\n  //   });\n  // };\n  // authenticate = provider => {\n  //   const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n  //   firebaseApp\n  //     .auth()\n  //     .signInWithPopup(authProvider)\n  //     .then(this.authHandler);\n  // };\n\n  // logout = async () => {\n  //   await firebase.auth().signOut();\n  //   this.setState({ uid: null });\n  // };\n  // render() {\n  /*\n    const logout = (\n      <button onClick={this.logout} className=\"logout\">\n        Log Out!\n      </button>\n    );\n    // Check if they're logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // Check if they're not the owner of the store.\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div className=\"login-page\">\n          <h2>Sorry, you're not the owner</h2>\n          {logout}\n        </div>\n      );\n    }\n    // Then finally, they're the owner, render the inventory;\n    */\n  render() {\n    return (\n      <div className=\"inventory\">\n        <h1>Inventory</h1>\n        {/* {logout} */}\n        {Object.keys(this.props.items).map(key => (\n          <EditItemForm\n            key={key}\n            index={key}\n            item={this.props.items[key]}\n            updateItem={this.props.updateItem}\n            deleteItem={this.props.deleteItem}\n          />\n        ))}\n        <AddItemForm addItem={this.props.addItem} />\n        <button className=\"load-button\" onClick={this.props.loadItemsSamples}>\n          Load Sample Items\n        </button>\n      </div>\n    );\n  }\n}\nexport default Inventory;\n","const items = {\n  item1: {\n    name: 'Blueberries',\n    price: 6.5,\n    image: '../images/blueberries.jpg',\n    description: 'Blueberries are perennial flowering plants with blue– or purple–colored berries.',\n    status: true\n  },\n  item2: {\n    name: 'Chocolate',\n    price: 14.50,\n    image: '../images/chocolate.jpg',\n    description: 'Unsweetened chocolate is pure chocolate liquor, also known as bitter or baking chocolate.',\n    status: true\n  },\n  item3: {\n    name: 'Christmas Cookies',\n    price: 5.9,\n    image: '../images/christmas-cookies.jpg',\n    description: 'Christmas biscuits are traditionally sugar cookies or biscuits cut into various shapes related to Christmas.',\n    status: false\n  },\n  item4: {\n    name: 'Cupcakes',\n    price: 3.2,\n    image: '../images/cupcakes.jpg',\n    description: 'A cupcake is a small cake designed to serve one person, which may be baked in a small thin paper or aluminum cup.',\n    status: true\n  },\n  item5: {\n    name: 'Macarons',\n    price: 7,\n    image: '../images/macarons.jpg',\n    description: 'Colorful, pillowy, and delicately flavored, macarons are perhaps one of the most famous and treasured French desserts.',\n    status: true\n  },\n  item6: {\n    name: 'Pears',\n    price: 8.5,\n    image: '../images/pears.jpg',\n    description: 'Pears are one of the best fruits to eat as part of a healthful diet. Pears are full of vitamins, antioxidants, and fiber.',\n    status: true\n  }\n\n}\n\nexport default items;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Item.css'\nimport { formatCurrency } from '../../helpers';\n\n\nclass Item extends React.Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      status: PropTypes.bool,\n      //price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  myImage = React.createRef();\n  defaultImage = '/images/default.png';\n  loadImage = () => {\n    this.myImage.current.setAttribute('src', this.defaultImage);\n  }\n\n  handleAddToOrder = () => {\n    this.props.addToOrder(this.props.index);\n  }\n\n  render(){\n    const {image, name, price, description, status} = this.props.data;\n    \n    return(\n      <li className={'single-item ' + (status ? '' : 'disabled') }>\n\n        <img src={(image || this.defaultImage)} alt={name} onError={this.loadImage} ref={this.myImage}/>\n        <h3>{name} <span className=\"price\">{formatCurrency(parseInt(price))}</span></h3>\n        <p className=\"desc\">{description}</p>\n        <button className=\"add-to-cart\" disabled={!status} onClick={this.handleAddToOrder}>\n          {status ? 'Add to Card' : 'SOLD OUT!'}\n        </button>\n      </li>\n    );\n  }\n}\n// Item.propTypes = {\n\n// }\nexport default Item;","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; \n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBL7vNy9u3g0d-SiNaemwpYMELVGMm2dr4\",\n    authDomain: \"marketwhale-mj.firebaseapp.com\",\n    databaseURL: \"https://marketwhale-mj.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp } // named export\n\nexport default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header/Header\";\nimport Order from \"./Order/Order\";\nimport Inventory from \"./Inventory/Inventory\";\nimport sampleItems from \"../ItemsSamples\";\nimport Item from \"./Item/Item\";\nimport base from \"../base\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.marketWhale = React.createRef();\n  }\n  static propTypes = {\n    match: PropTypes.object\n  };\n  state = {\n    items: {},\n    order: {}\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n    this.ref = base.syncState(`${params.storeId}/items`, {\n      context: this,\n      state: \"items\"\n    });\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n  componentWillUpdate() {\n    const key = this.props.match.params.storeId;\n    localStorage.setItem(key, JSON.stringify(this.state.order));\n  }\n\n  addItem = item => {\n    const items = { ...this.state.items }; // Take copy of state;\n    items[`item${Date.now()}`] = item; // Change it.\n    this.setState({\n      // Update the origin state;\n      items\n    });\n  };\n\n  updateItem = (item, updatedItem) => {\n    const items = { ...this.state.items }; // Take a copy of state\n    items[item] = updatedItem; // Change it\n    this.setState({\n      // Update it\n      items\n    });\n  };\n  \"\";\n\n  deleteItem = item => {\n    const items = { ...this.state.items }; // Take a copy of state\n    items[item] = null;\n    this.setState({\n      items\n    });\n  };\n\n  addToOrder = item => {\n    const order = { ...this.state.order }; // Take copy of state;\n    order[item] = order[item] + 1 || 1; // Change it\n    this.setState({\n      // Update the origin state\n      order\n    });\n  };\n\n  deletefromOrder = item => {\n    const order = { ...this.state.order };\n    delete order[item];\n    this.setState({\n      order\n    });\n  };\n\n  loadItemsSamples = () => {\n    this.setState({\n      items: sampleItems\n    });\n  };\n\n  foldElements = event => {\n    event.target.classList.toggle(\"folded\");\n    this.marketWhale.current.classList.toggle(\"folded\");\n  };\n\n  render() {\n    return (\n      <>\n        <button className=\"fold\" onClick={this.foldElements}>\n          Fold\n        </button>\n        <button className=\"built-by\">\n          <a\n            href=\"https://imsolitude.github.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Built By @codebymj\n          </a>\n        </button>\n\n        <div className=\"market-whale\" ref={this.marketWhale}>\n          <div className=\"menu\">\n            <Header tagline=\"Literally a market whale!\" />\n            <ul className=\"list-of-items\">\n              {Object.keys(this.state.items).map(key => (\n                <Item\n                  key={key}\n                  data={this.state.items[key]}\n                  addToOrder={this.addToOrder}\n                  index={key}\n                />\n              ))}\n            </ul>\n          </div>\n\n          <Order\n            items={this.state.items}\n            order={this.state.order}\n            deletefromOrder={this.deletefromOrder}\n          />\n          <Inventory\n            addItem={this.addItem}\n            updateItem={this.updateItem}\n            deleteItem={this.deleteItem}\n            loadItemsSamples={this.loadItemsSamples}\n            items={this.state.items}\n            storeId={this.props.match.params.storeId}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './NotFound.css'\n\nconst NotFound = () => {\n  return(\n    <>\n      <div class=\"not-found\">\n        <h1>Sorry ... Page is Not Found!</h1>\n      </div>\n    </>\n    \n  );\n}\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport StorePicker from './StorePicker/StorePicker';\nimport App from './App';\nimport NotFound from './NotFound/NotFound';\n\nconst AppRouter = () => {\n  return(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeId\" component={App}/>\n      <Route component={NotFound}/>\n    </Switch>\n  </Router>\n  );\n}\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}